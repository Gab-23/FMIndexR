% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BackwardSearch.R
\name{BackwardSearch}
\alias{BackwardSearch}
\title{BackwardSearch}
\usage{
BackwardSearch(FM_index, pattern, store_elems = FALSE)
}
\arguments{
\item{FM_index}{object of class FM_index obtained using FM_index_from_FASTA}

\item{pattern}{non-empty string containing the pattern to look for}

\item{store_elems}{default = FALSE, can be modified to save
the original sequence,
the pattern indexes and the pattern string
in case a manual check wants to be made}
}
\value{
Shows a report of the number of patterns found and their location.
If store_elems = TRUE a report for manual check can be returned.
If no pattern is found, NULL is returned
}
\description{
The function looks for patterns inside the original sequence,
using its FM_index and performing a
backward search procedure.
}
\details{
If the Suffix Array is compressed Last-to-First mapping
will be applied to reconstruct missing values

Please note that querying a sequence using a compressed
FM index will take longer than using the uncompressed one
}
\examples{
# Example pattern search using BackwardSearch and an FM Index
input_file <- system.file("extdata", "prova.txt", package = "FMIndexR")
output_path <- system.file("output", package = "FMIndexR")
FM_index <- FM_index_from_FASTA(input_file, output_path, save = FALSE)
BackwardSearch(FM_index, "CC")
}
